<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEU0AABFNAcA5YGMAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADT0lEQVRoQ+2a309SYRjHueiitrqsv6cb55VzE3FetFUW0HJdOJsc/BVKKkqBWoCtctHWZvmDljor
        VoqImuXa6kYx+sHKwtmmKSBy4Ol94UUPhxM7EhxhO5/tO89539fnPB8OB914Jbni0lX9KTlltCrUxjUU
        Hz4+r+49SaYLg6q6zhMKteGzgjK45PWGChwkM4viuawxHSfLhGFSc/qIw1R2wWGW6tLF2Fb7XKttnGPm
        cn3XR9T0yjmN5igpJ6mpMRxTIpHqhq4P7PW4BldtZpwWaRXuiZTjj9NcrnP1yXbfW8+kjea6NoqaBmaU
        lJFGP42k1B5ovBuN47mk9bgGV21mZlAvTpO0g5TiD5KYXRm8CP7purTpvNGZ1BQOeuUjcsowQkrtgeZs
        Cqo7RRzX4KrNDO4FycySUvyZscjmVobknEWZ4RLBUdYjGfRskHISdFyJx7jW8hJBveCeSDn+/K8ICn7l
        IwrK+EOpNnyPHcfHUtYKLhJafgK73+xJMZrvpjR20OAa7Lr4WsxrZ1UksuEBNqOv5jmbO0jGX78h1fbB
        12JeO+ciYZoG69BLqG6+xdlkuuDfeThij9VgI7hIrhBF2IgiWUIUYSOKZImCFaEjEXD/+kLOClQkTIeh
        x26FK4+0sBMOxcYKTiQQCkLbmAVqBtphdWONjAosQunv8UoC3OjNF/2wteOPnftDAdCOmqD2sQ58m+ux
        sQSCini8q7ySILAbhJZnt0E1qAfPmhdUQ3potHXDZmCLrNhHUJFM2EZ3o9nWA2fvq+Da0174E9wmM8nk
        vQgGyzxwjcTu0L8oCBE+iCJsRJEsURAitD/+dyRBFP17EgkmP/h5L4IlFisqwDc+Hh+IRuGTTgdLDQ3x
        c0JB3JHfDgfMFxfD6vAwLLe0wDuZDAJeL5mNI6jInYExXuFifXIS5ouKYKGkJEUCI6iI3bXIK2yiNA3u
        1lZYKC2N3ZmfNhuZ2UdQkUxISCTeTutTU5wyeS+CP52Wmppg2+0mIwC+iQn42tdHzuLkvQhfRBE2okiW
        EEXYiCJZIqciXF+95So5/ertMCOK8N0wIFQy3jDgtEg78BaOt/2VO/kQ3Mu0uaydtMcfvIEFb2RxmstV
        eZFMN9WIHAoSyV+XKCjMBdWOQgAAAABJRU5ErkJggg==
</value>
  </data>
</root>